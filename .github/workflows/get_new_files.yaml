name: Get Newly Added Downloadable Files

on:
  repository_dispatch:
    types: get-new-files

jobs:
  get-new-files:
    runs-on: ubuntu-latest

    steps:
      # - name: Fetch previous commit SHA from event payload
      #   id: fetch_prev_commit
      #   run: |
      #     echo "client payload ${{ github.event.client_payload.before }}"
      #     echo "::set-output name=prev_commit::${{ github.event.client_payload.before }}"

      # - name: Fetch current commit SHA from event payload
      #   id: fetch_curr_commit
      #   run: echo "::set-output name=curr_commit::${{ github.event.client_payload.after }}"

      # - name: Checkout source code
      #   uses: actions/checkout@v2

      # - name: Get changed files
      #   id: get_changed_files
      #   run: |
      #     PREV_COMMIT_SHA=${{ steps.fetch_prev_commit.outputs.prev_commit }}
      #     CURRENT_COMMIT_SHA=${{ steps.fetch_curr_commit.outputs.curr_commit }}
      #     CHANGED_FILES=$(git diff --name-only "${PREV_COMMIT_SHA}" "${CURRENT_COMMIT_SHA}")
      #     echo "${CHANGED_FILES}" > changed_files.txt
      # Make sure you have the 'jq' tool to parse JSON responses
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # Call GitHub REST API to get commit SHAs
      - name: Fetch commit SHAs
        id: fetch_commit_shas
        run: |
          PREV_COMMIT_SHA=$(curl -s -H "Authorization: Bearer ${{ secrets.REPO_A_PAT }}" \
            "https://api.github.com/repos/SyedShamail1/Repo-B/commits?sha=main" \
            | jq -r '.[1].sha')
          CURRENT_COMMIT_SHA=$(curl -s -H "Authorization: Bearer ${{ secrets.REPO_A_PAT }}" \
            "https://api.github.com/repos/SyedShamail1/Repo-B/commits?sha=main" \
            | jq -r '.[0].sha')
          echo "PREV_COMMIT_SHA=${PREV_COMMIT_SHA}" >> $GITHUB_ENV
          echo "CURRENT_COMMIT_SHA=${CURRENT_COMMIT_SHA}" >> $GITHUB_ENV
          echo "PREV_COMMIT_SHA=${PREV_COMMIT_SHA}" 
          echo "CURRENT_COMMIT_SHA=${CURRENT_COMMIT_SHA}" 

      - name: Get the list of added files using GitHub API
        id: added_files
        run: |
          PREVIOUS_SHA=$(git rev-parse ${{ github.event.before }})
          URL="https://api.github.com/repos/SyedShamail1/Repo-B/compare/${{ env.CURRENT_COMMIT_SHA }}...${{ env.CURRENT_COMMIT_SHA }}"
          ADDED_FILES=$(curl -s -H "Authorization: Bearer ${{ secrets.REPO_A_PAT }}" $URL | jq -r '.files[] | select(.status == "added") | .filename')
          echo "::set-output name=files::$ADDED_FILES"

      # (Optional) Construct GitHub downloadable links for the newly added files
      - name: Construct downloadable links
        id: construct_links
        run: |
          BASE_URL="https://github.com/${GITHUB_REPOSITORY}/raw/${GITHUB_SHA}/"

          while IFS= read -r file; do
            echo "${BASE_URL}${file}" >> downloadable_links.txt
          done < newly_added_files.txt

      - name: Show downloadable links
        run: |
          cat downloadable_links.txt
